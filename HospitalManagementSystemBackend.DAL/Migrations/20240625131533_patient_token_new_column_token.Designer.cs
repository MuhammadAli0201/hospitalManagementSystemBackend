// <auto-generated />
using System;
using HospitalManagementSystemBackend.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagementSystemBackend.DAL.Migrations
{
    [DbContext(typeof(HMSDbContext))]
    [Migration("20240625131533_patient_token_new_column_token")]
    partial class patient_token_new_column_token
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Gender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            GenderName = "Male"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            GenderName = "Female"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            GenderName = "Others."
                        });
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Medicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicine");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3204524c-827c-4c02-b64a-0f27feff5c68"),
                            Name = "Paracetamol"
                        },
                        new
                        {
                            Id = new Guid("94df7ffc-1281-4620-a64d-1c768b7c8df6"),
                            Name = "Ibuprofen"
                        },
                        new
                        {
                            Id = new Guid("d54f2c00-e4a8-4d8f-907e-805f278df8a9"),
                            Name = "Loratadine"
                        },
                        new
                        {
                            Id = new Guid("343f8fe6-f45d-42d4-b3fd-56c9dc003a79"),
                            Name = "Omeprazole"
                        },
                        new
                        {
                            Id = new Guid("03c85095-c976-43f3-aa1e-294e704147fc"),
                            Name = "Amoxicillin"
                        },
                        new
                        {
                            Id = new Guid("c76ed72a-e2e3-4dd9-87af-d36e0a127e66"),
                            Name = "Simvastatin"
                        },
                        new
                        {
                            Id = new Guid("fed1adc9-0778-494d-b2bf-cb257e13dd33"),
                            Name = "Metformin"
                        },
                        new
                        {
                            Id = new Guid("27355d7c-02fe-4254-a997-bdac889a94ff"),
                            Name = "Warfarin"
                        },
                        new
                        {
                            Id = new Guid("a39d7eae-b49c-4066-90f3-dd2c65f8819b"),
                            Name = "Albuterol"
                        },
                        new
                        {
                            Id = new Guid("2ad8b7b6-4f0e-4f0b-815c-582aed90727f"),
                            Name = "Fluoxetine"
                        },
                        new
                        {
                            Id = new Guid("ab55f1f2-ad69-40f2-aa7f-07c92071b761"),
                            Name = "Morphine"
                        },
                        new
                        {
                            Id = new Guid("bc14bb02-e299-4f6e-87ea-db63c8b4bef3"),
                            Name = "Hydrochlorothiazide"
                        },
                        new
                        {
                            Id = new Guid("8f097174-d4ad-4e7a-a31f-38c046ee0ea5"),
                            Name = "Amlodipine"
                        },
                        new
                        {
                            Id = new Guid("c8bdbd60-4d34-46fc-9367-0c676306b84c"),
                            Name = "Prednisone"
                        },
                        new
                        {
                            Id = new Guid("0920bdc0-62dd-425c-9e5c-09baf7d1607e"),
                            Name = "Diazepam"
                        });
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientScript", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiseaseDiagnosed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientTokenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalBill")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatientTokenId");

                    b.ToTable("PatientScript");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientScriptMedicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientScriptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientScriptId2")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PatientScriptId");

                    b.ToTable("PatientScriptMedicine");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientToken");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Doctor", b =>
                {
                    b.HasBaseType("HospitalManagementSystemBackend.Models.Models.Person");

                    b.Property<string>("AreaOfSpecialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Doctor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2be6b28-5009-41f7-b017-89b553555ad9"),
                            Address = "123 Main St, City",
                            Age = 35,
                            CNIC = "12345-678901",
                            DateOfBirth = new DateTime(1989, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "John",
                            GenderId = new Guid("11111111-1111-1111-1111-111111111111"),
                            LName = "Doe",
                            MobileNo = "123456781",
                            AreaOfSpecialization = "Cardiology"
                        },
                        new
                        {
                            Id = new Guid("412c2eaf-09ad-4daf-b3b0-a72f395fb630"),
                            Address = "456 Elm St, City",
                            Age = 40,
                            CNIC = "12345-678902",
                            DateOfBirth = new DateTime(1984, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "Emily",
                            GenderId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LName = "Smith",
                            MobileNo = "123456782",
                            AreaOfSpecialization = "Orthopedics"
                        },
                        new
                        {
                            Id = new Guid("be4e5bcf-3ff2-46b2-84db-a283d789f7a9"),
                            Address = "789 Oak St, City",
                            Age = 45,
                            CNIC = "12345-678903",
                            DateOfBirth = new DateTime(1979, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "Michael",
                            GenderId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LName = "Johnson",
                            MobileNo = "123456783",
                            AreaOfSpecialization = "Neurology"
                        },
                        new
                        {
                            Id = new Guid("7a491719-5e4c-4a66-b1d9-b329f6861c2c"),
                            Address = "234 Pine St, City",
                            Age = 38,
                            CNIC = "12345-678904",
                            DateOfBirth = new DateTime(1986, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "Sarah",
                            GenderId = new Guid("11111111-1111-1111-1111-111111111111"),
                            LName = "Williams",
                            MobileNo = "123456784",
                            AreaOfSpecialization = "Pediatrics"
                        },
                        new
                        {
                            Id = new Guid("730e9aea-700c-40e5-8fe5-57211f9f68fe"),
                            Address = "567 Cedar St, City",
                            Age = 42,
                            CNIC = "12345-678905",
                            DateOfBirth = new DateTime(1982, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "David",
                            GenderId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LName = "Brown",
                            MobileNo = "123456785",
                            AreaOfSpecialization = "Dermatology"
                        },
                        new
                        {
                            Id = new Guid("0ec584f4-f945-44e0-a53c-dbf4adf91680"),
                            Address = "890 Maple St, City",
                            Age = 37,
                            CNIC = "12345-678906",
                            DateOfBirth = new DateTime(1987, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FName = "Jennifer",
                            GenderId = new Guid("33333333-3333-3333-3333-333333333333"),
                            LName = "Lee",
                            MobileNo = "123456786",
                            AreaOfSpecialization = "Oncology"
                        });
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Patient", b =>
                {
                    b.HasBaseType("HospitalManagementSystemBackend.Models.Models.Person");

                    b.HasDiscriminator().HasValue("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientScript", b =>
                {
                    b.HasOne("HospitalManagementSystemBackend.Models.Models.PatientToken", "PatientToken")
                        .WithMany("PatientScripts")
                        .HasForeignKey("PatientTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientToken");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientScriptMedicine", b =>
                {
                    b.HasOne("HospitalManagementSystemBackend.Models.Models.Medicine", "Medicine")
                        .WithMany("PatientScriptMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagementSystemBackend.Models.Models.PatientScript", "PatientScript")
                        .WithMany("PatientScriptMedicines")
                        .HasForeignKey("PatientScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("PatientScript");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientToken", b =>
                {
                    b.HasOne("HospitalManagementSystemBackend.Models.Models.Doctor", "Doctor")
                        .WithMany("PatientTokens")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HospitalManagementSystemBackend.Models.Models.Patient", "Patient")
                        .WithMany("PatientTokens")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Person", b =>
                {
                    b.HasOne("HospitalManagementSystemBackend.Models.Models.Gender", "Gender")
                        .WithMany("Persons")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Gender", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Medicine", b =>
                {
                    b.Navigation("PatientScriptMedicines");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientScript", b =>
                {
                    b.Navigation("PatientScriptMedicines");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.PatientToken", b =>
                {
                    b.Navigation("PatientScripts");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Doctor", b =>
                {
                    b.Navigation("PatientTokens");
                });

            modelBuilder.Entity("HospitalManagementSystemBackend.Models.Models.Patient", b =>
                {
                    b.Navigation("PatientTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
